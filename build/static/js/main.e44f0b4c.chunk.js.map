{"version":3,"sources":["components/Header.js","components/Searchbar.js","constants/ActionTypes.js","actions/index.js","containers/Searchbar.js","constants/Colors.js","components/Graph.js","containers/Graph.js","components/CardDetail.js","components/Body.js","containers/Body.js","components/Footer.js","components/App.js","serviceWorker.js","reducers/plays.js","reducers/index.js","reducers/cards.js","reducers/search.js","index.js"],"names":["useStyles","makeStyles","theme","root","minHeight","fancy","background","border","borderRadius","boxShadow","color","height","padding","margin","flexGrow","Header","props","classes","AppBar","position","className","Toolbar","Container","maxWidth","Typography","variant","marginTop","addCard","card","type","connect","state","results","search","fetchSearch","term","dispatch","requestSearch","fetch","then","resp","json","list","receivedAt","Date","now","catch","error","console","fetchCardPlays","id","plays","receiveCardPlays","Autocomplete","onInputChange","event","newValue","freeSolo","onChange","title","length","renderOption","option","getOptionSelected","value","log","options","getOptionLabel","renderInput","params","TextField","fullWidth","label","Alert","severity","COLORS","mergeArrays","arrays","jointArray","forEach","array","filter","item","index","indexOf","byId","allIds","cards","labels","map","loading","Object","keys","key","moment","format","datasets","backgroundColor","borderColor","borderWidth","data","values","display","text","fontSize","legend","fancyorange","mythic","justifyContent","rare","set","marginBottom","controls","flexDirection","alignItems","deletebutton","CardDetail","Card","rarity","CardContent","gutterBottom","IconButton","onClick","removeCard","aria-label","Cards","fetchCard","requestCard","receiveCard","Grid","container","direction","justify","xs","md","loaded","CircularProgress","size","Link","href","class","data-icon","data-inline","App","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","assign","undefined","loggerMiddleware","createLogger","store","createStore","reducer","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e44f0b4c.chunk.js","sourcesContent":["import React from 'react'\nimport { AppBar, Toolbar, Typography, Container, Link } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight:60\n  },\n  fancy:{\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 100,\n      padding: '0 30px',\n      margin: '10px 10px 10px 10px',\n      flexGrow:1\n  }\n}));\n\nexport default function Header(props){\n    const classes = useStyles()\n\n    return (\n        <AppBar position=\"sticky\" className={classes.root}>\n          <Toolbar>\n              <Container maxWidth='md'>\n                  <Typography variant=\"h4\">MTG Pro Plays Terminal</Typography>\n              </Container>\n          </Toolbar>\n        </AppBar>\n    )\n\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {  Container, TextField } from '@material-ui/core/';\nimport { Autocomplete } from '@material-ui/lab';\nimport { Alert } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 12\n  }\n}));\n\n\nlet options = []\n\nexport default function Searchbar({fetchSearch, addCard ,fetchCardPlays, results}){\n    const classes = useStyles();\n    return(\n        <Container>\n            <Autocomplete\n              id=\"combo-box-demo\"\n              onInputChange = {(event, newValue) => {\n                  fetchSearch(newValue)\n              }}\n              freeSolo\n              className={classes.root}\n              onChange = {(event, newValue) => {\n                  if(newValue && newValue.title.length > 0){\n                      fetchCardPlays(newValue)\n                  }\n              }}\n              renderOption = { (option) => (\n                    <>\n                        <span>{option.title}</span>\n                    </>\n              )}\n              getOptionSelected={(option, value)=> console.log(option)}\n              options={results}\n              getOptionLabel={(option) => option.title}\n              renderInput={(params) =>\n              <TextField {...params} id=\"outlined-basic\" fullWidth label=\"Standard Cards\" variant=\"outlined\" />}\n              />\n            <Alert severity=\"info\"> If no data appears on graph, then the given card has never been played.</Alert>\n        </Container>\n    )\n\n}\n","\nexport const REMOVE_CARD = 'REMOVE_CARD'\nexport const ADD_CARD = 'ADD_CARD'\nexport const REQUEST_SEARCH = 'REQUEST_SEARCH'\nexport const RECEIVE_SEARCH = 'RECEIVE_SEARCH'\nexport const REQUEST_CARD = 'REQUEST_CARD'\nexport const RECEIVE_CARD = 'RECEIVE_CARD'\nexport const REQUEST_CARD_PLAYS = 'REQUEST_CARD_PLAYS'\nexport const RECEIVE_CARD_PLAYS = 'RECEIVE_CARD_PLAYS'\n","import * as types from '../constants/ActionTypes'\nimport fetch from 'cross-fetch'\nimport 'babel-polyfill'\n\nexport const addCard = (card) => ({\n    type: types.ADD_CARD,\n    card\n})\n\nexport const requestCardPlays = (id) => ({\n    type: types.REQUEST_CARD_PLAYS,\n    id\n})\n\nexport const receiveCardPlays = (id, plays) => ({\n    type: types.RECEIVE_CARD_PLAYS,\n    id,\n    plays\n})\n\n\nexport function fetchCardPlays(card){\n    return function(dispatch){\n        dispatch(addCard(card))\n        dispatch(requestCardPlays(card.id))\n\n        return fetch('http://mtgapi.chriswevans.com/df/plays/'+ card.id +'/standard')\n            .then(resp=>resp.json())\n            .then(json => dispatch(receiveCardPlays(card.id, json)))\n            .catch((error) => {\n              console.error('Error:', error);\n            })\n\n    }\n}\n\nexport const removeCard = (id) => ({\n    type: types.REMOVE_CARD, id\n})\n\n// Not Used\nexport const requestCard = (title) => ({\n    type: types.REQUEST_CARD, title\n})\n// Not Used\nexport const receiveCard = (title, resp) => ({\n    type: types.RECEIVE_CARD,\n    receivedAt: Date.now(),\n    title,\n    resp\n})\n\nexport const requestSearch = (term) => ({\n    type: types.REQUEST_SEARCH, term\n})\n\nexport const receiveSearch = (term, list) => ({\n    type: types.RECEIVE_SEARCH,\n    receivedAt: Date.now(),\n    list\n})\n\nexport function fetchCard(title){\n\n    return function(dispatch){\n        dispatch(requestCard(title))\n\n        return fetch('http://mtgapi.chriswevans.com/card/'+ title)\n            .then(resp => resp.json())\n            .then(json => dispatch(receiveCard(title, json)))\n            .catch((error) => {\n              console.error('Error:', error);\n            })\n    }\n}\n\nexport function fetchSearch(term){\n    return function(dispatch){\n        dispatch(requestSearch(term))\n\n        return fetch('http://mtgapi.chriswevans.com/search/cards/' + term)\n            .then(resp=>resp.json())\n            .then(json=> dispatch(receiveSearch(term, json)))\n            .catch((error) => {\n              console.error('Error:', error);\n            })\n    }\n}\n","import { connect } from 'react-redux'\nimport Searchbar from '../components/Searchbar'\nimport { fetchSearch, addCard, fetchCardPlays } from '../actions'\n\nconst mapStateToProps = state => (\n    {results:state.search}\n)\n\n\nexport default connect(mapStateToProps, { fetchSearch, addCard, fetchCardPlays })(Searchbar)\n","export const COLORS = [\n    '#e00000',\n    '#e07000',\n    '#e0e000',\n    '#70e000',\n    '#00e000',\n    '#00e070'\n]\n","import React from 'react'\nimport {Bar, Line} from 'react-chartjs-2';\nimport * as moment from 'moment';\nimport { COLORS } from '../constants/Colors'\n\nfunction mergeArrays(arrays) {\n    let jointArray = []\n    console.log(arrays)\n    arrays.forEach(array => {\n        jointArray = [...jointArray, ...array]\n    })\n    const uniqueArray = jointArray.filter((item,index) => jointArray.indexOf(item) === index)\n    return uniqueArray\n}\n\n//.map(key => moment.unix(key/1000).format(\"MM/DD/YYYY\"))\nexport default function Graph({byId, allIds, cards}){\n\n    let numTrack = 0\n    const state = {\n      labels: mergeArrays( allIds.map(id=> byId[id].loading ? [] : Object.keys(byId[id]['norm_occ'])))\n                .map(key => moment.unix(key/1000).format(\"MM/DD/YYYY\")),\n      datasets: cards.map(card => (!byId.loading && byId[card.id]['norm_occ'] ?\n          {\n              label: card.title,\n              backgroundColor: 'rgba(0,0,0,0)',\n              borderColor: COLORS[cards.indexOf(card)],\n              borderWidth: 2,\n              data: Object.values(byId[card.id]['norm_occ'])\n          } :\n          {\n              label: card.title,\n              backgroundColor: 'rgba(0,0,0,0)',\n              borderColor: COLORS[cards.indexOf(card)],\n              borderWidth: 2,\n              data: []\n          })\n      )\n    };\n\n    return(\n        <Line\n            data={state}\n            height={250}\n            options={{\n              title:{\n                display:true,\n                text:'Plays Per Day Per Deck',\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'top'\n              }\n            }}\n          />\n    )\n\n}\n","import { connect } from 'react-redux'\nimport Graph from '../components/Graph'\n\nconst mapStateToProps = state => (\n    {\n        byId: state.plays.byId,\n        allIds: state.plays.allIds,\n        cards: state.cards\n    }\n)\n\n\nexport default connect(mapStateToProps, null)(Graph)\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, GridList, Typography, Card, CardContent, IconButton } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { COLORS } from '../constants/Rarities'\n\n//linear-gradient(45deg, #A23013 20%, #D87E04 90%)\nconst useStyles = makeStyles((theme) => ({\n  root: {\n  },\n  fancyorange:{\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 120,\n      padding: '0 30px',\n      margin: '10px 10px 10px 10px',\n      flexGrow:1\n  },\n  mythic:{\n      display: 'flex',\n      justifyContent: 'space-between',\n      background: 'linear-gradient(0.13turn, #A23013, #D87E04, #A23013)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 120,\n      padding: '5px 5px',\n      margin: '10px 10px 10px 10px',\n      flexGrow:1\n  },\n  rare:{\n      display: 'flex',\n      justifyContent: 'space-between',\n      background: 'linear-gradient(0.13turn, #D87E04, #CAB57B, #D87E04)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 120,\n      padding: '5px 5px',\n      margin: '10px 10px 10px 10px',\n      flexGrow:1\n  },\n  set: {\n    fontSize: 14,\n    marginBottom:0\n  },\n  title: {\n    marginTop: 0,\n  },\n  controls: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end',\n      justifyContent: 'flex-end'\n  },\n  deletebutton:{\n\n  }\n}));\n\n\nexport default function CardDetail({...props}){\n    const classes = useStyles()\n\n    return (\n        <Card item className={props.rarity==='mythic-rare' ? classes.mythic : classes.rare}>\n            <CardContent>\n                <Typography variant=\"subtitle\" className={classes.set} gutterBottom>{props.rarity==='mythic-rare' ? \"Mythic-Rare\" : \"Rare\"} : {props.set}</Typography>\n                <Typography variant=\"h4\" className={classes.title} gutterBottom>{props.title}</Typography>\n            </CardContent>\n            <div className={classes.controls}>\n                <IconButton className={classes.deletebutton} onClick={()=>props.removeCard(props.id)} aria-label=\"delete\">\n                    <DeleteIcon fontSize='large'/>\n                </IconButton>\n            </div>\n        </Card>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, GridList, Button, CircularProgress } from '@material-ui/core/';\n\nimport Graph from '../containers/Graph'\nimport CardDetail from './CardDetail'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    minHeight: \"110%\"\n  }\n}));\n\n\nlet cardID = 0;\n\nexport default function Body({ Cards, fetchCard, removeCard}){\n    const classes = useStyles();\n\n    return(\n        <Grid\n          container\n          direction=\"row-reverse\"\n          justify=\"center\"\n          alignItems=\"str\"\n          >\n          <Grid item xs={12} md={6}>\n            <Graph />\n          </Grid>\n\n\n          <Grid item xs={12} md={6}>\n            { Cards.map(card => card.loaded ?\n                <CardDetail {...card} removeCard = { (id=>removeCard(id)) } / > :\n                <CircularProgress color=\"inherit\" size={60} />\n            ) }\n          </Grid>\n\n        </Grid>\n    )\n}\n","import { connect } from 'react-redux'\nimport Body from '../components/Body'\nimport { fetchCard, removeCard } from '../actions'\n\nconst mapStateToProps = state => (\n    {Cards:state.cards}\n)\n\n\n\n\nexport default connect(mapStateToProps, { fetchCard, removeCard })(Body)\n","import React from 'react'\nimport { AppBar, Toolbar, Typography, Container, Link } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight:100,\n    background: '#9D9695',\n    position: \"sticky\"\n  },\n  fancy:{\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      border: 0,\n      borderRadius: 3,\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      color: 'white',\n      height: 100,\n      padding: '0 30px',\n      margin: '10px 10px 10px 10px',\n      flexGrow:1\n  }\n}));\n\nexport default function Header(props){\n    const classes = useStyles()\n\n    return (\n        <AppBar position=\"sticky\" className={classes.root}>\n            <Container maxWidth=\"md\">\n                <Typography> MTG Pro Plays Terminal - <Link color=\"inherit\" href=\"https://github.com/ChrisWeldon/MTG-Database-API\"> MTG API </Link> </Typography>\n                <Typography> <span class=\"iconify\" data-icon=\"cib:react\" data-inline=\"false\"></span> React + <span class=\"iconify\" data-icon=\"simple-icons:redux\" data-inline=\"false\"></span> Redux + <span class=\"iconify\" data-icon=\"cib:flask\" data-inline=\"false\"></span> Flask + <span class=\"iconify\" data-icon=\"whh:mysqltwo\" data-inline=\"false\"></span> MySQL</Typography>\n                <Typography> &copy; Christopher W. Evans, <Link href=\"https://github.com/ChrisWeldon/MTG-Plays-Frontend\"> MIT License </Link></Typography>\n                <Typography>\n                    <Link color=\"inherit\" href=\"https://github.com/ChrisWeldon/MTG-Plays-Frontend\">\n                        <GitHubIcon />\n                    </Link>\n                    <Link color=\"inherit\" href=\"https://www.linkedin.com/in/chrisweldonevans/\">\n                        <LinkedInIcon />\n                    </Link>\n                </Typography>\n            </Container>\n        </AppBar>\n    )\n\n}\n","import React from 'react';\nimport {  } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from './Header'\nimport Searchbar from '../containers/Searchbar'\nimport Body from '../containers/Body'\nimport Footer from './Footer'\n\nimport '../App.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n  }\n}));\n\nfunction App() {\n    const classes = useStyles();\n    return (\n      <>\n      <Header />\n\n      <Searchbar />\n\n      <Body />\n\n      <Footer />\n      </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport {\n    REQUEST_CARD_PLAYS,\n    RECEIVE_CARD_PLAYS,\n    REMOVE_CARD\n} from \"../constants/ActionTypes\"\n\nconst initialState = {\n    byId:{\n\n    },\n    allIds:[]\n}\n\nexport default function plays(state=initialState, action){\n    const { byId, allIds} = state\n\n    switch(action.type){\n        case REQUEST_CARD_PLAYS:\n            return {\n                byId: {...byId, [action.id] : {loading: true}},\n                allIds:[ ...allIds , action.id ]\n            }\n\n        case RECEIVE_CARD_PLAYS:\n            return {\n                byId: { ...byId, [ action.id ]: {...action.plays, loading : false} },\n                allIds: [ ...allIds]\n            }\n\n        case REMOVE_CARD:\n\n            return {\n                byId: Object.assign({}, byId, { [action.id] :undefined }),\n                allIds: allIds.filter(id => id!=action.id)\n            }\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport cards from './cards'\nimport search from './search'\nimport plays from './plays'\n\nconst rootReducer = combineReducers({\n    cards,\n    search,\n    plays\n})\n\nexport default rootReducer;\n","\nimport {\n    REQUEST_CARD,\n    RECEIVE_CARD,\n    ADD_CARD,\n    REMOVE_CARD\n} from \"../constants/ActionTypes\"\n\n\nexport default function cards(state=[], action){\n    switch(action.type){\n\n        case REQUEST_CARD:\n            return [\n                ...state,\n                {\n                    title: action.title,\n                    loaded: false\n                }\n            ]\n\n        case RECEIVE_CARD:\n            return state.map(card=> (card.title==action.title) ? {\n                ...action.resp,\n                loaded: true\n            } : card)\n\n        case ADD_CARD:\n            return [\n                ...state.filter(card=>card.id!=action.card.id),\n                {\n                    ...action.card,\n                    loaded: true\n                }\n            ]\n\n        case REMOVE_CARD:\n            return state.filter(card => card.id != action.id)\n\n        default:\n            return state\n    }\n}\n","\nimport {\n    REQUEST_SEARCH,\n    RECEIVE_SEARCH\n} from \"../constants/ActionTypes\"\n\n\nexport default function cards(state=[], action){\n    switch(action.type){\n\n        case REQUEST_SEARCH:\n            return state\n\n        case RECEIVE_SEARCH:\n            return [\n                ...action.list\n            ]\n        default:\n            return state\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\n\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './reducers'\n\nimport { addCard, fetchCard, fetchSearch } from './actions'\n\nconst loggerMiddleware = createLogger()\nconst store = createStore(\n    reducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n)\n\n//const unsubscribe = store.subscribe(() => console.log(store.getState()))\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}